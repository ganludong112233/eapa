<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:property-placeholder location="classpath:serverConfig.properties" />

	<!-- 把web下注解的类转换为bean -->
	<context:component-scan base-package="com.tcl.ep.admin.controller" />

	<mvc:annotation-driven />

	<!--3. 由于DispatchServlet拦截了所有的请求,也包括静态资源 所以对于静态资源的访问,我们需要在这里进行配置 -->
	<mvc:resources mapping="/images/**" location="/WEB-INF/images/" />
	<mvc:resources mapping="/styles/**" location="/WEB-INF/styles/" />
	<mvc:resources mapping="/script/**" location="/WEB-INF/script/" />
	<mvc:resources mapping="/fonts/**" location="/WEB-INF/fonts/" />

	<!--4. 配置ViewResolver,我们不光可以指定为JSP,也可以指定其它的 比如本文件使用freeMarker, 以下是配置 通过查询大量的配置示例,发现这两个类是必不可少的, 
		即一个是配置类,一个是解析类, 不过由于并没有直接引用, 所以可以不设置ID -->
	<!-- ===================================================== -->
	<!-- ViewResolver For FreeMarker -->
	<!-- ===================================================== -->
	<bean
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="order" value="1" />
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=utf-8" />
		<!--使用SpringMVC的相关标签 -->
		<property name="exposeSpringMacroHelpers" value="true" />
		<!-- 由于默认是FreeMarkerView, 所以这个配置是可省略的 <property name="viewClass"> <value>org.springframework.web.servlet.view.freemarker.FreeMarkerView</value> 
			</property> -->
	</bean>
	<!-- ===================================================== -->
	<!-- ViewResolver For FreeMarkerConfigurer -->
	<!-- ===================================================== -->
	<bean
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/pages/" />
		<property name="freemarkerSettings"><!-- 设置FreeMarker环境属性 -->
			<props>
				<prop key="template_update_delay">5</prop><!--刷新模板的周期，单位为秒 -->
				<prop key="default_encoding">UTF-8</prop><!--模板的编码格式 -->
				<prop key="locale">UTF-8</prop><!-- 本地化设置 -->
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="number_format">#.##</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="tag_syntax">auto_detect</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
			</props>
		</property>
	</bean>

	<!-- 通过对这个文件的分析,我们发现一共有4步,是必须要配置的 -->
	<!--ajax支持 <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" 
		/> <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"> 
		<property name="messageConverters"> <list> <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> 
		<property name="supportedMediaTypes"> <list> <value>text/html;charset=UTF-8</value> 
		</list> </property> </bean> </list> </property> </bean> -->
		
	<!-- 设置结果集数据转换格式 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean id="fastJsonHttpMessageConverter"
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 处理外部静态资源请求 -->
	<mvc:default-servlet-handler />

</beans>